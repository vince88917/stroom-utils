root /usr/share/nginx/html;

listen                      80;
listen                      443 ssl;
server_name                 {{ publicAddress }} {{ publicHostname }};

# The server's public certificate
ssl_certificate             /etc/pki/tls/certs/{{ publicHostname }}.crt;
# The server's private key
ssl_certificate_key         /etc/pki/tls/private/{{ publicHostname }}.key;
# The public CA cert for verifying client certs
ssl_client_certificate      /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem;

# These two need to be on otherwise we won't be able to extract the DN or the cert
# In order to capture the DN in the headers/logs, ssl_client_verify needs to be set
# to 'on' or 'optional'. With 'optional' nginx will request that the client provides
# a cert and use it if it does. Nginx doedsn't currently (without using multiple server
# blocks) have a way to set ssl_client_verify at the 'location' level which would
# allow us to selectively turn it on.
ssl_verify_client           optional;
ssl_verify_depth            10;

# These set the timeouts - the unit is seconds
proxy_connect_timeout       300;
proxy_send_timeout          300;
proxy_read_timeout          300;
send_timeout                300;

# Set the max body sizde to unlimited to allow for large data imports
client_max_body_size        0;

# Set the amount of memory used to buffer client bodies before using temporary files
client_body_buffer_size     1M;

# If this were on NGINX would buffer all client request bodies. This includes any huge
# files sent to datafeed. Turning this off means all requests are immediately sent to
# the proxied upstream server.
# TODO: I _think_ this makes client_max_body_size and client_body_buffer_size redundent.
# TODO: Possibly this should be set just for /datafeed.
proxy_request_buffering     off;

# TODO - May want to consider this approach for large file uploads
# https://stackoverflow.com/questions/44371643/nginx-php-failing-with-large-file-uploads-over-6-gb
# i.e. getting nginx to persist the body to disk then only pass the persisted filename to stroom.
# This is on the assumption that stroom and nginx can both rw to the same disk location, e.g. a
# a common docker volume.

# Was the CA cert configured with an OCSP responder?
#   - If so you can enable the following lines and NGINX will call out to the OCSP
#     server to check for revoked certificates.
# Are there intermediate CA certs?
#   - If so you will need to cat them together to make sure the OCSP server is picked up.
#ssl_stapling            on;
#ssl_stapling_verify     on;
#ssl_trusted_certificate /stroom-nginx/certs/ca.pem.crt;

#location / {
#  include cors.conf;
#}

# vim: set filetype=conf shiftwidth=4 tabstop=4 expandtab:

